@using System.Security.Claims
@inject NavigationManager _navigation

<div class="card shadow">
    <img src="@Recipe.Photo" class="card-img-top" alt="@Recipe.Name">
    <div class="card-body">
        <h5 class="card-title">@Recipe.Name</h5>
        <h6 class="card-subtitle">@Recipe.Category?.Name</h6>
        <ul class="list-group list-group-flush my-2">
            <li class="list-group-item"><span class="oi oi-clock me-1"></span> @Recipe.TimeFormatter</li>
            <li class="list-group-item"><span class="oi oi-star me-1"></span> @Recipe.Difficulty</li>
        </ul>
        <button class="btn btn-primary" @onclick="(async () => await OnSelected.InvokeAsync(Recipe))">
            <i class="fa-regular fa-eye"></i>
        </button>
        <FavoriteButton Recipe="Recipe" />
        <AuthorizeView>
            @if (Recipe.Owner == @context.User.Claims.Where(c => c.Type == ClaimTypes.Name).Select(c => c.Value).FirstOrDefault())
            {
                <button class="btn btn-outline-primary float-end" @onclick="@(() => _navigation.NavigateTo($"/edit-recipe/{Recipe.Id}"))">
                    <i class="fa-solid fa-pen"></i>
                </button>
            }
        </AuthorizeView>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public GetRecipeHeaderDto Recipe { get; set; } = default!;

    [Parameter, EditorRequired]
    public EventCallback<GetRecipeHeaderDto> OnSelected { get; set; } = default!;
}
